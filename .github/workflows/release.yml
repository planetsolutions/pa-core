name: publish release

on:
  release:
    types: [ released ]

env:
  IMAGE_NAME: pa-core

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
      - name: Prepare folders
        run: mkdir -p /opt/doccloud/data

      - name: Build and deploy Maven artifacts
        run: mvn -B deploy --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: docker build . --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKERHUB_USER }} --password-stdin

      - name: Push image
        run: |
                # https://hub.docker.com/repository/docker/planetsolutions/pa-core
                IMAGE_ID=planetsolutions/$IMAGE_NAME

                # Strip git ref prefix from version
                VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

                # Strip "v" prefix from tag name
                [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

                echo IMAGE_ID=$IMAGE_ID
                echo VERSION=$VERSION

                docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
                docker tag $IMAGE_NAME $IMAGE_ID:stable
                docker tag $IMAGE_NAME $IMAGE_ID:latest
                docker push $IMAGE_ID:$VERSION
                docker push $IMAGE_ID:stable
                docker push $IMAGE_ID:latest
