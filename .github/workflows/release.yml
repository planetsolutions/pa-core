name: publish release
on:
  push:
    branches: [ feature/docker-release ]
#  release:
#    types: [created]

env:
  IMAGE_NAME: pa-core

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build app
          run: mvn -B package --file pom.xml

      - name: Build Docker image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
                IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

                # Strip git ref prefix from version
                VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

                # Strip "v" prefix from tag name
                [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

                # Use Docker `latest` tag convention
                [ "$VERSION" == "master" ] && VERSION=latest
                echo IMAGE_ID=$IMAGE_ID
                echo VERSION=$VERSION

                docker tag image $IMAGE_ID:$VERSION
                docker push $IMAGE_ID:$VERSION